USE GD1C2023
GO

-- CREACION DEL SCHEMA --

IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'NEW_MODEL')
    EXEC('CREATE SCHEMA NEW_MODEL');

-- ELIMINACION PREVENTIVA DE TABLAS --

IF OBJECT_ID('NEW_MODEL.PAGO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.PAGO
IF OBJECT_ID('NEW_MODEL.MENSAJERIA', 'U') IS NOT NULL DROP TABLE NEW_MODEL.MENSAJERIA
IF OBJECT_ID('NEW_MODEL.ENVIO_MENSAJERIA', 'U') IS NOT NULL DROP TABLE NEW_MODEL.ENVIO_MENSAJERIA
IF OBJECT_ID('NEW_MODEL.MENSAJERIA_ESTADO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.MENSAJERIA_ESTADO
IF OBJECT_ID('NEW_MODEL.PAQUETE', 'U') IS NOT NULL DROP TABLE NEW_MODEL.PAQUETE
IF OBJECT_ID('NEW_MODEL.TIPO_PAQUETE', 'U') IS NOT NULL DROP TABLE NEW_MODEL.TIPO_PAQUETE
IF OBJECT_ID('NEW_MODEL.CUPON_GENERADO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.CUPON_GENERADO
IF OBJECT_ID('NEW_MODEL.RECLAMO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.RECLAMO
IF OBJECT_ID('NEW_MODEL.CUPON_APLICADO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.CUPON_APLICADO
IF OBJECT_ID('NEW_MODEL.CUPON', 'U') IS NOT NULL DROP TABLE NEW_MODEL.CUPON
IF OBJECT_ID('NEW_MODEL.CUPON_TIPO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.CUPON_TIPO
IF OBJECT_ID('NEW_MODEL.CUPON_MOTIVO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.CUPON_MOTIVO
IF OBJECT_ID('NEW_MODEL.OPERADOR', 'U') IS NOT NULL DROP TABLE NEW_MODEL.OPERADOR
IF OBJECT_ID('NEW_MODEL.ESTADO_RECLAMO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.ESTADO_RECLAMO
IF OBJECT_ID('NEW_MODEL.TIPO_RECLAMO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.TIPO_RECLAMO
IF OBJECT_ID('NEW_MODEL.ITEM', 'U') IS NOT NULL DROP TABLE NEW_MODEL.ITEM
IF OBJECT_ID('NEW_MODEL.LOCAL_PRODUCTO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.LOCAL_PRODUCTO
IF OBJECT_ID('NEW_MODEL.PRODUCTO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.PRODUCTO
IF OBJECT_ID('NEW_MODEL.HORARIO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.HORARIO
IF OBJECT_ID('NEW_MODEL.DIA', 'U') IS NOT NULL DROP TABLE NEW_MODEL.DIA
IF OBJECT_ID('NEW_MODEL.LOCAL', 'U') IS NOT NULL DROP TABLE NEW_MODEL.LOCAL
IF OBJECT_ID('NEW_MODEL.TIPO_LOCAL', 'U') IS NOT NULL DROP TABLE NEW_MODEL.TIPO_LOCAL
IF OBJECT_ID('NEW_MODEL.CATEGORIA', 'U') IS NOT NULL DROP TABLE NEW_MODEL.CATEGORIA
IF OBJECT_ID('NEW_MODEL.PEDIDO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.PEDIDO
IF OBJECT_ID('NEW_MODEL.MEDIO_PAGO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.MEDIO_PAGO
IF OBJECT_ID('NEW_MODEL.TARJETA', 'U') IS NOT NULL DROP TABLE NEW_MODEL.TARJETA
IF OBJECT_ID('NEW_MODEL.MARCA_TARJETA', 'U') IS NOT NULL DROP TABLE NEW_MODEL.MARCA_TARJETA
IF OBJECT_ID('NEW_MODEL.PEDIDO_ESTADO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.PEDIDO_ESTADO
IF OBJECT_ID('NEW_MODEL.PEDIDO_ENVIO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.PEDIDO_ENVIO
IF OBJECT_ID('NEW_MODEL.DIRECCION_USUARIO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.DIRECCION_USUARIO
IF OBJECT_ID('NEW_MODEL.ALTA', 'U') IS NOT NULL DROP TABLE NEW_MODEL.ALTA
IF OBJECT_ID('NEW_MODEL.REPARTIDOR', 'U') IS NOT NULL DROP TABLE NEW_MODEL.REPARTIDOR
IF OBJECT_ID('NEW_MODEL.TIPO_MOVILIDAD', 'U') IS NOT NULL DROP TABLE NEW_MODEL.TIPO_MOVILIDAD
IF OBJECT_ID('NEW_MODEL.USUARIO', 'U') IS NOT NULL DROP TABLE NEW_MODEL.USUARIO
IF OBJECT_ID('NEW_MODEL.LOCALIDAD', 'U') IS NOT NULL DROP TABLE NEW_MODEL.LOCALIDAD
IF OBJECT_ID('NEW_MODEL.PROVINCIA', 'U') IS NOT NULL DROP TABLE NEW_MODEL.PROVINCIA

-- ELIMINACION PREVENTIVA DE INDICES --
IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'UNIQUE_NULL_PEDIDO_NRO')
DROP INDEX UNIQUE_NULL_PEDIDO_NRO ON NEW_MODEL.PAGO;

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'UNIQUE_NULL_MENSAJERIA_NRO')
DROP INDEX UNIQUE_NULL_MENSAJERIA_NRO ON NEW_MODEL.PAGO;

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IX_PEDIDO_ENVIO_REPARTIDOR_FECHA_DIRECCION')
DROP INDEX IX_PEDIDO_ENVIO_REPARTIDOR_FECHA_DIRECCION ON NEW_MODEL.PEDIDO_ENVIO;

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IX_ENVIO_MENSAJERIA_REPARTIDOR_FECHA_DIRECCION')
DROP INDEX IX_ENVIO_MENSAJERIA_REPARTIDOR_FECHA_DIRECCION ON NEW_MODEL.ENVIO_MENSAJERIA;

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IX_LOCALIDAD')
DROP INDEX IX_LOCALIDAD ON NEW_MODEL.LOCALIDAD;

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IX_REPARTIDOR')
DROP INDEX IX_REPARTIDOR ON NEW_MODEL.REPARTIDOR;

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IX_USUARIO')
DROP INDEX IX_USUARIO ON NEW_MODEL.USUARIO;

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IX_ALTA')
DROP INDEX IX_ALTA ON NEW_MODEL.ALTA;

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IX_DIRECCION_USUARIO')
DROP INDEX IX_DIRECCION_USUARIO ON NEW_MODEL.DIRECCION_USUARIO;

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IX_LOCAL')
DROP INDEX IX_LOCAL ON NEW_MODEL.LOCAL;

IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IX_TARJETA')
DROP INDEX IX_TARJETA ON NEW_MODEL.TARJETA;

-- IF EXISTS (SELECT 1 FROM sys.indexes WHERE name = 'IX_OPERADOR')
-- DROP INDEX IX_OPERADOR ON NEW_MODEL.OPERADOR;

-- CREACION SEGURA DE TABLAS

CREATE TABLE NEW_MODEL.PROVINCIA(
PROVINCIA_NRO int IDENTITY PRIMARY KEY,
PROVINCIA_NOMBRE nvarchar(255) NOT NULL UNIQUE
);

CREATE TABLE NEW_MODEL.LOCALIDAD(
LOCALIDAD_NRO int IDENTITY PRIMARY KEY,
LOCALIDAD_PRIVINCIA_NRO int REFERENCES NEW_MODEL.PROVINCIA,
LOCALIDAD_NOMBRE nvarchar(255) NOT NULL,
);

CREATE TABLE NEW_MODEL.USUARIO(
USUARIO_NRO int IDENTITY PRIMARY KEY,
USUARIO_NOMBRE nvarchar(255) NOT NULL,
USUARIO_APELLIDO nvarchar(255) NOT NULL,
USUARIO_DNI decimaL(18,0) NOT NULL UNIQUE,
USUARIO_FECHA_REGISTRO datetime2(3) NOT NULL,  
USUARIO_TELEFONO decimal(18, 0) NOT NULL,
USUARIO_MAIL nvarchar(255) NOT NULL UNIQUE,      
USUARIO_FECHA_NAC date NOT NULL
);

CREATE TABLE NEW_MODEL.TIPO_MOVILIDAD(
TIPO_MOVILIDAD_NRO int IDENTITY PRIMARY KEY,
TIPO_MOVILIDAD_NOMBRE nvarchar(50) NOT NULL UNIQUE
);

CREATE TABLE NEW_MODEL.REPARTIDOR(
REPARTIDOR_NRO int IDENTITY PRIMARY KEY,
REPARTIDOR_TIPO_MOVILIDAD_NRO int REFERENCES NEW_MODEL.TIPO_MOVILIDAD,
REPARTIDOR_NOMBRE nvarchar(255) NOT NULL,
REPARTIDOR_APELLIDO nvarchar(255) NOT NULL,
REPARTIDOR_DNI decimal(18, 0) NOT NULL UNIQUE,
REPARTIDOR_TELEFONO decimal(18, 0) NOT NULL,
REPARTIDOR_DIRECCION nvarchar(255) NOT NULL,
REPARTIDOR_EMAIL nvarchar(255) NOT NULL,
REPARTIDOR_FECHA_NAC date NOT NULL,
);

CREATE TABLE NEW_MODEL.ALTA(
ALTA_REPARTIDOR_NRO int REFERENCES NEW_MODEL.REPARTIDOR,
ALTA_LOCALIDAD_NRO int REFERENCES NEW_MODEL.LOCALIDAD,
ALTA_FECHA datetime NOT NULL,
ALTA_ACTIVA BIT NOT NULL DEFAULT 0,
PRIMARY KEY(ALTA_REPARTIDOR_NRO,ALTA_LOCALIDAD_NRO)
);

CREATE TABLE NEW_MODEL.DIRECCION_USUARIO(
DIRECCION_USUARIO_NRO int IDENTITY PRIMARY KEY,
DIRECCION_USUARIO_USUARIO_NRO int REFERENCES NEW_MODEL.USUARIO NOT NULL,
DIRECCION_USUARIO_LOCALIDAD_NRO int REFERENCES NEW_MODEL.LOCALIDAD NOT NULL,
DIRECCION_USUARIO_NOMBRE nvarchar(50) NOT NULL,
DIRECCION_USUARIO_DIRECCION nvarchar(255) NOT NULL,
);


CREATE TABLE NEW_MODEL.PEDIDO_ENVIO(
PEDIDO_ENVIO_NRO int IDENTITY PRIMARY KEY,
PEDIDO_ENVIO_REPARTIDOR_NRO int REFERENCES NEW_MODEL.REPARTIDOR NOT NULL,
PEDIDO_ENVIO_DIRECCION_USUARIO_NRO int REFERENCES NEW_MODEL.DIRECCION_USUARIO NOT NULL,
PEDIDO_ENVIO_OBSERV nvarchar(255) NULL,
PEDIDO_ENVIO_FECHA datetime NOT NULL,
PEDIDO_ENVIO_FECHA_ENTREGA datetime NOT NULL,
);


CREATE TABLE NEW_MODEL.PEDIDO_ESTADO(
PEDIDO_ESTADO_NRO int IDENTITY PRIMARY KEY,
PEDIDO_ESTADO nvarchar(50) NOT NULL UNIQUE
);


CREATE TABLE NEW_MODEL.MARCA_TARJETA(
MARCA_TARJETA_NRO int IDENTITY PRIMARY KEY,
MARCA_TARJETA nvarchar(100) NOT NULL UNIQUE
);

CREATE TABLE NEW_MODEL.TARJETA(
TARJETA_NRO int IDENTITY PRIMARY KEY,
TARJETA_USUARIO_NRO int REFERENCES NEW_MODEL.USUARIO,
TARJETA_MARCA_NRO int REFERENCES NEW_MODEL.MARCA_TARJETA,
TARJETA nvarchar(50) NOT NULL,
CONSTRAINT UQ_TarjetaMarcaNumero UNIQUE (TARJETA_MARCA_NRO, TARJETA)
);

CREATE TABLE NEW_MODEL.MEDIO_PAGO(
MEDIO_PAGO_NRO int IDENTITY PRIMARY KEY,
MEDIO_PAGO nvarchar(50) NOT NULL UNIQUE
);

CREATE TABLE NEW_MODEL.PEDIDO(
PEDIDO_NRO int PRIMARY KEY,
PEDIDO_ENVIO_NRO int REFERENCES NEW_MODEL.PEDIDO_ENVIO NOT NULL UNIQUE,
PEDIDO_ESTADO_NRO int REFERENCES NEW_MODEL.PEDIDO_ESTADO NOT NULL,
PEDIDO_USUARIO_NRO int REFERENCES NEW_MODEL.USUARIO NOT NULL,
PEDIDO_TOTAL_CUPONES decimal(18, 2) NOT NULL DEFAULT 0,
PEDIDO_TARIFA_SERVICIO decimal(18, 2) NOT NULL DEFAULT 0,
PEDIDO_PROPINA decimal(18, 2) NOT NULL DEFAULT 0,
PEDIDO_PRECIO_ENVIO decimal(18, 2) NOT NULL DEFAULT 0,
PEDIDO_TOTAL_SERVICIO decimal(18, 2) NOT NULL DEFAULT 0,
PEDIDO_TOTAL_PRODUCTOS decimal(18, 2) NOT NULL DEFAULT 0,
PEDIDO_CALIFICACION decimal(18, 0) NOT NULL,
PEDIDO_TIEMPO_ESTIMADO decimal(18, 2) NOT NULL DEFAULT 0,
PEDIDO_TOTAL decimal(18,2) NOT NULL DEFAULT 0
);

CREATE TABLE NEW_MODEL.CATEGORIA(
CATEGORIA_NRO int IDENTITY PRIMARY KEY,
CATEGORIA_NOMBRE nvarchar(50) NOT NULL UNIQUE,
);

CREATE TABLE NEW_MODEL.TIPO_LOCAL(
TIPO_LOCAL_NRO int IDENTITY PRIMARY KEY,
TIPO_LOCAL_CATEGORIA_NRO int REFERENCES NEW_MODEL.CATEGORIA NULL,
TIPO_LOCAL_NOMBRE nvarchar(50) NOT NULL UNIQUE
);


CREATE TABLE NEW_MODEL.LOCAL(
LOCAL_NRO int IDENTITY PRIMARY KEY,
LOCAL_TIPO_LOCAL_NRO int REFERENCES NEW_MODEL.TIPO_LOCAL,
LOCAL_LOCALIDAD_NRO int REFERENCES NEW_MODEL.LOCALIDAD,
LOCAL_NOMBRE nvarchar(100) NOT NULL,
LOCAL_DESCRIPCION nvarchar(255) NOT NULL,
LOCAL_DIRECCION nvarchar(255) NOT NULL,
);

CREATE TABLE NEW_MODEL.DIA(
DIA_NRO int IDENTITY PRIMARY KEY,
DIA_NOMBRE nvarchar(50) NULL,

);

CREATE TABLE NEW_MODEL.HORARIO(
HORARIO_NRO int IDENTITY PRIMARY KEY,
HORARIO_LOCAL_NRO int REFERENCES NEW_MODEL.LOCAL,
HORARIO_DIA_NRO int REFERENCES NEW_MODEL.DIA,
HORARIO_LOCAL_HORA_APERTURA decimal(18, 0) NULL,
HORARIO_LOCAL_HORA_CIERRE decimal(18, 0) NULL,
);


CREATE TABLE NEW_MODEL.PRODUCTO(
PRODUCTO_NRO int IDENTITY PRIMARY KEY,
PRODUCTO_CODIGO nvarchar(50) UNIQUE,
PRODUCTO_NOMBRE nvarchar(50) NOT NULL,
PRODUCTO_DESCRIPCION nvarchar(255) NOT NULL,
);

CREATE TABLE NEW_MODEL.LOCAL_PRODUCTO(
LOCAL_PRODUCTO_LOCAL_NRO int REFERENCES NEW_MODEL.LOCAL,
LOCAL_PRODUCTO_PRODUCTO_NRO int REFERENCES NEW_MODEL.PRODUCTO,
LOCAL_PRODUCTO_PRECIO_UNITARIO decimal(18, 0) NOT NULL DEFAULT 0
PRIMARY KEY(LOCAL_PRODUCTO_LOCAL_NRO, LOCAL_PRODUCTO_PRODUCTO_NRO)
);

CREATE TABLE NEW_MODEL.ITEM(
ITEM_LOCAL_PRODUCTO_LOCAL_NRO int,
ITEM_LOCAL_PRODUCTO_PRODUCTO_NRO int,
ITEM_PEDIDO_NRO int REFERENCES NEW_MODEL.PEDIDO,
ITEM_CANTIDAD decimal(18,0) NOT NULL DEFAULT 0,
ITEM_PRECIO decimal(18,2) NOT NULL DEFAULT 0,
ITEM_TOTAL decimal(18,2) NOT NULL DEFAULT 0,
-- ITEM_TOTAL decimal(18,2) NOT NULL DEFAULT 0,
FOREIGN KEY (ITEM_LOCAL_PRODUCTO_LOCAL_NRO, ITEM_LOCAL_PRODUCTO_PRODUCTO_NRO) REFERENCES NEW_MODEL.LOCAL_PRODUCTO(LOCAL_PRODUCTO_LOCAL_NRO, LOCAL_PRODUCTO_PRODUCTO_NRO),
PRIMARY KEY(ITEM_LOCAL_PRODUCTO_LOCAL_NRO, ITEM_LOCAL_PRODUCTO_PRODUCTO_NRO,ITEM_PEDIDO_NRO)
);

CREATE TABLE NEW_MODEL.TIPO_RECLAMO(
TIPO_RECLAMO_NRO int IDENTITY PRIMARY KEY,
TIPO_RECLAMO_NOMBRE nvarchar(50) NOT NULL UNIQUE
);

CREATE TABLE NEW_MODEL.ESTADO_RECLAMO(
ESTADO_RECLAMO_NRO int IDENTITY PRIMARY KEY,
ESTADO_RECLAMO_NOMBRE NVARCHAR(50) NOT NULL UNIQUE,
);

CREATE TABLE NEW_MODEL.OPERADOR(
OPERADOR_NRO int IDENTITY PRIMARY KEY,
OPERADOR_RECLAMO_DNI int NOT NULL,
OPERADOR_RECLAMO_NOMBRE nvarchar(255) NOT NULL,
OPERADOR_RECLAMO_APELLIDO nvarchar(255) NOT NULL,
OPERADOR_RECLAMO_TELEFONO decimal(18,0) NOT NULL,
OPERADOR_RECLAMO_DIRECCION nvarchar(255) NOT NULL,
OPERADOR_RECLAMO_MAIL nvarchar(255) NOT NULL,
OPERADOR_RECLAMO_FECHA_NAC datetime NOT NULL,
);

CREATE TABLE NEW_MODEL.CUPON_TIPO(
CUPON_TIPO_NRO int IDENTITY PRIMARY KEY,
CUPON_TIPO nvarchar(50) NOT NULL UNIQUE,
);

CREATE TABLE NEW_MODEL.CUPON_MOTIVO(
CUPON_MOTIVO_NRO int IDENTITY PRIMARY KEY,
CUPON_MOTIVO nvarchar(50) NOT NULL UNIQUE,
);

CREATE TABLE NEW_MODEL.CUPON(
CUPON_NRO int,
CUPON_TIPO_NRO int REFERENCES NEW_MODEL.CUPON_TIPO,                         
CUPON_USUARIO_NRO int REFERENCES NEW_MODEL.USUARIO NOT NULL,
CUPON_MOTIVO_NRO int REFERENCES NEW_MODEL.CUPON_MOTIVO NOT NULL,
CUPON_MONTO decimal(18,2) NOT NULL DEFAULT 0,
CUPON_FECHA_ALTA datetime NOT NULL,
CUPON_FECHA_VENCIMIENTO datetime NOT NULL
PRIMARY KEY(CUPON_NRO,CUPON_TIPO_NRO)
);

CREATE TABLE NEW_MODEL.CUPON_APLICADO (
CUPON_APLICADO_PEDIDO_NRO int REFERENCES NEW_MODEL.PEDIDO NOT NULL,
CUPON_APLICADO_CUPON_NRO int NOT NULL,
CUPON_APLICADO_CUPON_TIPO_NRO int NOT NULL,
CUPON_APLICADO_FECHA datetime NOT NULL,
FOREIGN KEY (CUPON_APLICADO_CUPON_NRO, CUPON_APLICADO_CUPON_TIPO_NRO) REFERENCES NEW_MODEL.CUPON (CUPON_NRO, CUPON_TIPO_NRO),
PRIMARY KEY (CUPON_APLICADO_PEDIDO_NRO, CUPON_APLICADO_CUPON_NRO, CUPON_APLICADO_CUPON_TIPO_NRO),
CONSTRAINT UQ_CUPON_APLICADO UNIQUE (CUPON_APLICADO_CUPON_NRO, CUPON_APLICADO_CUPON_TIPO_NRO)
);

CREATE TABLE NEW_MODEL.RECLAMO(
RECLAMO_NRO	int PRIMARY KEY,
RECLAMO_USUARIO_NRO int REFERENCES NEW_MODEL.USUARIO NOT NULL,
RECLAMO_PEDIDO_NRO int REFERENCES NEW_MODEL.PEDIDO NOT NULL UNIQUE,
RECLAMO_TIPO_RECLAMO_NRO int REFERENCES NEW_MODEL.TIPO_RECLAMO NOT NULL,
RECLAMO_ESTADO_RECLAMO_NRO int REFERENCES NEW_MODEL.ESTADO_RECLAMO NOT NULL,
RECLAMO_OPERADOR_NRO int REFERENCES NEW_MODEL.OPERADOR NOT NULL,
RECLAMO_FECHA datetime NOT NULL,
RECLAMO_DESCRIPCION nvarchar(255) NOT NULL,
RECLAMO_FECHA_SOLUCION datetime NULL,
RECLAMO_SOLUCION nvarchar(255) NULL,
RECLAMO_CALIFICACION decimal(18, 0) NOT NULL,
);

CREATE TABLE NEW_MODEL.CUPON_GENERADO(
CUPON_GENERADO_RECLAMO_NRO int REFERENCES NEW_MODEL.RECLAMO,
CUPON_GENERADO_CUPON_NRO int,
CUPON_GENERADO_CUPON_TIPO int,
FOREIGN KEY(CUPON_GENERADO_CUPON_NRO, CUPON_GENERADO_CUPON_TIPO) REFERENCES NEW_MODEL.CUPON(CUPON_NRO, CUPON_TIPO_NRO),
PRIMARY KEY(CUPON_GENERADO_RECLAMO_NRO,CUPON_GENERADO_CUPON_NRO,CUPON_GENERADO_CUPON_TIPO)
);


CREATE TABLE NEW_MODEL.TIPO_PAQUETE(
TIPO_PAQUETE_NRO int IDENTITY PRIMARY KEY,
TIPO_PAQUETE_NOMBRE  nvarchar(50) NOT NULL UNIQUE,     
PAQUETE_ALTO_MAX decimal(18,2) NOT NULL DEFAULT 0,     
PAQUETE_ANCHO_MAX decimal(18,2) NOT NULL DEFAULT 0,     
PAQUETE_LARGO_MAX decimal(18,2) NOT NULL DEFAULT 0,     
PAQUETE_PESO_MAX decimal(18,2) NOT NULL DEFAULT 0
);

CREATE TABLE NEW_MODEL.PAQUETE(
PAQUETE_NRO int IDENTITY PRIMARY KEY,
PAQUETE_TIPO_PAQUETE_NRO int REFERENCES NEW_MODEL.TIPO_PAQUETE NOT NULL,     
TIPO_PAQUETE_PRECIO decimal(18,2) NULL
);

CREATE TABLE NEW_MODEL.MENSAJERIA_ESTADO(
MENSAJERIA_ESTADO_NRO int IDENTITY PRIMARY KEY,
ENVIO_MENSAJERIA_ESTADO nvarchar(50) NOT NULL UNIQUE,
);

CREATE TABLE NEW_MODEL.ENVIO_MENSAJERIA(
ENVIO_MENSAJERIA_NRO int IDENTITY PRIMARY KEY,
ENVIO_MENSAJERIA_LOCALIDAD_NRO int REFERENCES NEW_MODEL.LOCALIDAD NOT NULL,
ENVIO_MENSAJERIA_REPARTIDOR_NRO int REFERENCES NEW_MODEL.REPARTIDOR NOT NULL,
ENVIO_MENSAJERIA_DIR_ORIG nvarchar(255) NOT NULL,
ENVIO_MENSAJERIA_DIR_DEST nvarchar(255) NOT NULL,
ENVIO_MENSAJERIA_KM decimal(18, 2) NOT NULL DEFAULT 0,
ENVIO_MENSAJERIA_OBSERV nvarchar(255) NULL,
ENVIO_MENSAJERIA_FECHA datetime NOT NULL,
ENVIO_MENSAJERIA_FECHA_ENTREGA datetime NULL
);

CREATE TABLE NEW_MODEL.MENSAJERIA(
MENSAJERIA_NRO int PRIMARY KEY,
MENSAJERIA_USUARIO_NRO int REFERENCES NEW_MODEL.USUARIO NOT NULL,
MENSAJERIA_ENVIO_NRO int REFERENCES NEW_MODEL.ENVIO_MENSAJERIA NOT NULL UNIQUE,
MENSAJERIA_PAQUETE_NRO int REFERENCES NEW_MODEL.PAQUETE NOT NULL,
MENSAJERIA_ESTADO int REFERENCES NEW_MODEL.MENSAJERIA_ESTADO NOT NULL,
MENSAJERIA_PRECIO_SEGURO decimal(18, 2) NOT NULL DEFAULT 0,
MENSAJERIA_PRECIO_ENVIO decimal(18, 2) NOT NULL DEFAULT 0,
MENSAJERIA_PROPINA decimal(18, 2) NOT NULL DEFAULT 0,
MENSAJERIA_TOTAL decimal(18, 2) NOT NULL DEFAULT 0,
MENSAJERIA_VALOR_ASEGURADO decimal(18, 2) NOT NULL DEFAULT 0,
MENSAJERIA_CALIFICACION decimal(18, 0) NULL,
MENSAJERIA_TIEMPO_ESTIMADO decimal(18, 2) NOT NULL DEFAULT 0
);


CREATE TABLE NEW_MODEL.PAGO(
PAGO_NRO int IDENTITY PRIMARY KEY,
PAGO_PEDIDO_NRO int REFERENCES NEW_MODEL.PEDIDO NULL,
PAGO_MENSAJERIA_NRO int REFERENCES NEW_MODEL.MENSAJERIA NULL,
PAGO_MEDIO_PAGO_NRO int REFERENCES NEW_MODEL.MEDIO_PAGO NOT NULL,
PAGO_TARJETA_NRO int REFERENCES NEW_MODEL.TARJETA NULL,
);

--  INDEX en PAGO para evitar repetidos solo cuando el PAGO_PEDIDO_NRO no sea NULL
CREATE UNIQUE NONCLUSTERED INDEX UNIQUE_NULL_PEDIDO_NRO ON NEW_MODEL.PAGO(PAGO_PEDIDO_NRO) WHERE PAGO_PEDIDO_NRO IS NOT NULL;
--  INDEX en PAGO para evitar repetidos solo cuando el PAGO_MENSAJERIA_NRO no sea NULL
CREATE UNIQUE NONCLUSTERED INDEX UNIQUE_NULL_MENSAJERIA_NRO ON NEW_MODEL.PAGO(PAGO_MENSAJERIA_NRO) WHERE PAGO_MENSAJERIA_NRO IS NOT NULL;

CREATE INDEX IX_PEDIDO_ENVIO_REPARTIDOR_FECHA_DIRECCION
ON NEW_MODEL.PEDIDO_ENVIO (PEDIDO_ENVIO_REPARTIDOR_NRO, PEDIDO_ENVIO_FECHA,PEDIDO_ENVIO_DIRECCION_USUARIO_NRO);

CREATE INDEX IX_ENVIO_MENSAJERIA_REPARTIDOR_FECHA_DIRECCION
ON NEW_MODEL.ENVIO_MENSAJERIA (ENVIO_MENSAJERIA_REPARTIDOR_NRO, ENVIO_MENSAJERIA_FECHA, ENVIO_MENSAJERIA_DIR_DEST);

CREATE INDEX IX_LOCALIDAD
ON NEW_MODEL.LOCALIDAD (LOCALIDAD_PRIVINCIA_NRO,LOCALIDAD_NOMBRE);

CREATE INDEX IX_REPARTIDOR
ON NEW_MODEL.REPARTIDOR (REPARTIDOR_DNI);

CREATE INDEX IX_ALTA
ON NEW_MODEL.ALTA (ALTA_LOCALIDAD_NRO, ALTA_REPARTIDOR_NRO, ALTA_FECHA DESC);

CREATE INDEX IX_USUARIO
ON NEW_MODEL.USUARIO (USUARIO_DNI);

CREATE INDEX IX_DIRECCION_USUARIO
ON NEW_MODEL.DIRECCION_USUARIO (DIRECCION_USUARIO_NOMBRE, DIRECCION_USUARIO_DIRECCION);

CREATE INDEX IX_LOCAL
ON NEW_MODEL.LOCAL (LOCAL_NOMBRE,LOCAL_DIRECCION);

CREATE INDEX IX_TARJETA
ON NEW_MODEL.TARJETA (TARJETA_MARCA_NRO,TARJETA);

-- CREATE INDEX IX_OPERADOR
-- ON NEW_MODEL.OPERADOR (OPERADOR_RECLAMO_DNI, OPERADOR_RECLAMO_NOMBRE, OPERADOR_RECLAMO_APELLIDO);


-- CREACION FUNCIONES
IF OBJECT_ID('obtenerProvinciaNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerProvinciaNro;
GO
CREATE FUNCTION obtenerProvinciaNro(@provinciaNombre nvarchar(255)) RETURNS int 
AS
BEGIN
	DECLARE @provinciaNro int;
	SELECT @provinciaNro = PROVINCIA_NRO FROM NEW_MODEL.PROVINCIA WHERE PROVINCIA_NOMBRE = @provinciaNombre;
	RETURN @provinciaNro;
END
GO

IF OBJECT_ID('obtenerTipoMovilidadNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerTipoMovilidadNro;
GO
CREATE FUNCTION obtenerTipoMovilidadNro(@tipoMovilidadNombre nvarchar(50)) RETURNS int 
AS
    BEGIN
        DECLARE @TipoMovilidadId int;
        SELECT @TipoMovilidadId = TIPO_MOVILIDAD_NRO FROM NEW_MODEL.TIPO_MOVILIDAD WHERE TIPO_MOVILIDAD_NOMBRE = @tipoMovilidadNombre;
        RETURN @TipoMovilidadId;
    END
GO

IF OBJECT_ID('obtenerUsuarioNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerUsuarioNro;
GO
CREATE FUNCTION obtenerUsuarioNro(@usuarioDni decimal(18,0)) RETURNS int
 AS
	BEGIN
		DECLARE @usuario_nro int;
		SELECT @usuario_nro = USUARIO_NRO FROM NEW_MODEL.USUARIO WHERE USUARIO_DNI  = @usuarioDni AND USUARIO_NRO IS NOT NULL;
		RETURN @usuario_nro;
	END
GO  

IF OBJECT_ID('obtenerLocalidadNro', 'FN') IS NOT NULL
DROP FUNCTION  obtenerLocalidadNro;
GO
CREATE FUNCTION  obtenerLocalidadNro(@provincia nvarchar(255),@localidad nvarchar(255)) RETURNS int
AS
	BEGIN
		DECLARE @localidad_nro int;
		DECLARE @provincianro int;
		SET @provincianro = dbo.obtenerProvinciaNro(@provincia);
		SELECT @localidad_nro = LOCALIDAD_NRO FROM NEW_MODEL.LOCALIDAD WHERE LOCALIDAD_PRIVINCIA_NRO = @provincianro AND @localidad = LOCALIDAD_NOMBRE AND LOCALIDAD_NRO IS NOT NULL;
		RETURN @localidad_nro;
	END
GO

IF OBJECT_ID('obtenerCategoriaNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerCategoriaNro;
GO
CREATE FUNCTION  obtenerCategoriaNro(@categoria nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @categoriaNro int;
		SELECT @categoriaNro = CATEGORIA_NRO FROM NEW_MODEL.CATEGORIA WHERE CATEGORIA_NOMBRE = @categoria;
		RETURN @categoriaNro;
	END
GO

IF OBJECT_ID('obtenerTipoLocalNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerTipoLocalNro;
GO
CREATE FUNCTION  obtenerTipoLocalNro(@tipoLocal nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @tipoLocalNro int;
		SELECT @tipoLocalNro = TIPO_LOCAL_NRO FROM NEW_MODEL.TIPO_LOCAL WHERE TIPO_LOCAL_NOMBRE = @tipoLocal;
		RETURN @tipoLocalNro;
	END
GO

IF OBJECT_ID('obtenerLocalNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerLocalNro;
GO
CREATE FUNCTION  obtenerLocalNro(@localNombre nvarchar(100), @localDireccion nvarchar(255)) RETURNS int
AS
	BEGIN
		DECLARE @localNro int;
		SELECT @localNro = LOCAL_NRO FROM NEW_MODEL.LOCAL WHERE LOCAL_NOMBRE = @localNombre AND LOCAL_DIRECCION = @localDireccion;
		RETURN @localNro;
	END
GO

IF OBJECT_ID('obtenerDiaNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerDiaNro;
GO
CREATE FUNCTION  obtenerDiaNro(@diaNombre nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @diaNro int;
		SELECT @diaNro = DIA_NRO FROM NEW_MODEL.DIA WHERE DIA_NOMBRE = @diaNombre;
		RETURN @diaNro;
	END
GO

IF OBJECT_ID('obtenerRepartidorNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerRepartidorNro;
GO
CREATE FUNCTION obtenerRepartidorNro(@repartidorDni decimal(18,0)) RETURNS int
AS
	BEGIN
		DECLARE @repartidorNro int;
		SELECT @repartidorNro = REPARTIDOR_NRO FROM NEW_MODEL.REPARTIDOR WHERE REPARTIDOR_DNI =  @repartidorDni;
		RETURN @repartidorNro;
	END
GO

IF OBJECT_ID('obtenerDireccionUsuarioNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerDireccionUsuarioNro;
GO
CREATE FUNCTION obtenerDireccionUsuarioNro(@direccionNombre nvarchar(50),@direccionDireccion nvarchar(255)) RETURNS int
AS
	BEGIN
		DECLARE @direccionNro int;
		SELECT @direccionNro = DIRECCION_USUARIO_NRO FROM NEW_MODEL.DIRECCION_USUARIO WHERE DIRECCION_USUARIO_NOMBRE =  @direccionNombre AND DIRECCION_USUARIO_DIRECCION = @direccionDireccion;
		RETURN @direccionNro;
	END
GO

IF OBJECT_ID('obtenerProductoNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerProductoNro;
GO
CREATE FUNCTION obtenerProductoNro(@productoCodigo nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @productoNro int;
		SELECT @productoNro = PRODUCTO_NRO FROM NEW_MODEL.PRODUCTO WHERE PRODUCTO_CODIGO =  @productoCodigo;
		RETURN @productoNro;
	END
GO

IF OBJECT_ID('obtenerPedidoEnvioNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerPedidoEnvioNro;
GO
CREATE FUNCTION obtenerPedidoEnvioNro(@repartidorNro int, @fecha datetime, @direccionUsuarioNro int) RETURNS int
AS  
	BEGIN
    DECLARE @pedidoEnvioNro int;
    SELECT @pedidoEnvioNro = PEDIDO_ENVIO_NRO FROM NEW_MODEL.PEDIDO_ENVIO WHERE PEDIDO_ENVIO_REPARTIDOR_NRO = @repartidorNro AND PEDIDO_ENVIO_FECHA = @fecha and PEDIDO_ENVIO_DIRECCION_USUARIO_NRO = @direccionUsuarioNro;
    RETURN @pedidoEnvioNro;
	END
GO

IF OBJECT_ID('obtenerPedidoEstadoNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerPedidoEstadoNro;
GO
CREATE FUNCTION obtenerPedidoEstadoNro(@pedidoEstado  nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @pedidoEstadoNro int;
		SELECT @pedidoEstadoNro = PEDIDO_ESTADO_NRO FROM NEW_MODEL.PEDIDO_ESTADO WHERE PEDIDO_ESTADO =  @pedidoEstado;
		RETURN @pedidoEstadoNro;
	END
GO

IF OBJECT_ID('obtenerMedioPagoNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerMedioPagoNro;
GO
CREATE FUNCTION obtenerMedioPagoNro(@medioPagoTipo nvarchar(50)) RETURNS int
As
	BEGIN
		DECLARE @MedioPagoNro int;
		SELECT @MedioPagoNro = MEDIO_PAGO_NRO FROM NEW_MODEL.MEDIO_PAGO WHERE MEDIO_PAGO = @medioPagoTipo;
		RETURN @MedioPagoNro;
	END
GO

IF OBJECT_ID('obtenerMarcaTarjetaNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerMarcaTarjetaNro;
GO
CREATE FUNCTION obtenerMarcaTarjetaNro(@marcaTarjeta nvarchar(100)) RETURNS int
As
	BEGIN
		DECLARE @marcaTarjetaNro int;
		SELECT @marcaTarjetaNro = MARCA_TARJETA_NRO FROM NEW_MODEL.MARCA_TARJETA WHERE MARCA_TARJETA = @marcaTarjeta;
		RETURN @marcaTarjetaNro;
	END
GO

IF OBJECT_ID('obtenerTarjetaNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerTarjetaNro;
GO
CREATE FUNCTION obtenerTarjetaNro(@marcaTarjetaNro int, @tarjeta nvarchar(100)) RETURNS int
As
	BEGIN
		DECLARE @tarjetaNro int;
		SELECT @tarjetaNro = TARJETA_NRO FROM NEW_MODEL.TARJETA WHERE TARJETA_MARCA_NRO = @marcaTarjetaNro AND TARJETA = @tarjeta;
		RETURN @tarjetaNro;
	END
GO


IF OBJECT_ID('obtenertipoPaqueteNro', 'FN') IS NOT NULL
DROP FUNCTION obtenertipoPaqueteNro;
GO
CREATE FUNCTION obtenertipoPaqueteNro(@tipoNombre nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @tipoPaqueteNro int;
		SELECT DISTINCT @tipoPaqueteNro = TIPO_PAQUETE_NRO FROM NEW_MODEL.TIPO_PAQUETE WHERE TIPO_PAQUETE_NOMBRE = @tipoNombre;
		RETURN @tipoPaqueteNro;
	END
GO


IF OBJECT_ID('obtenerEnvioMensajeriaNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerEnvioMensajeriaNro;
GO
CREATE FUNCTION obtenerEnvioMensajeriaNro(@repartidorNro int, @fecha datetime, @direccionDestino nvarchar(255) ) RETURNS int
AS
	BEGIN
		DECLARE @envioMensajeriaNro int;
		SELECT @envioMensajeriaNro = ENVIO_MENSAJERIA_NRO FROM NEW_MODEL.ENVIO_MENSAJERIA WHERE ENVIO_MENSAJERIA_REPARTIDOR_NRO =  @repartidorNro AND ENVIO_MENSAJERIA_FECHA = @fecha AND @direccionDestino = ENVIO_MENSAJERIA_DIR_DEST
		RETURN @envioMensajeriaNro;
	END
GO

IF OBJECT_ID('obtenerEstadoNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerEstadoNro;
GO
CREATE FUNCTION obtenerEstadoNro(@estadoNombre nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @numeroEstado int;
		SELECT @numeroEstado = MENSAJERIA_ESTADO_NRO FROM NEW_MODEL.MENSAJERIA_ESTADO WHERE ENVIO_MENSAJERIA_ESTADO= @estadoNombre ;
		RETURN @numeroEstado;
	END
GO

IF OBJECT_ID('obtenerReclamoNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerReclamoNro;
GO
CREATE FUNCTION obtenerReclamoNro(@pedidoNro decimal(18,0)) RETURNS int
AS
	BEGIN
		DECLARE @nroReclamo int;
		SELECT @nroReclamo = RECLAMO_NRO FROM NEW_MODEL.RECLAMO WHERE @pedidoNro = RECLAMO_PEDIDO_NRO AND RECLAMO_NRO IS NOT NULL
		RETURN @nroReclamo
	END
GO

IF OBJECT_ID('obtenerTipoReclamo', 'FN') IS NOT NULL
DROP FUNCTION obtenerTipoReclamo;
GO
CREATE FUNCTION obtenerTipoReclamo(@tipoNombre nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @nroTipo int;
		SELECT @nroTipo = TIPO_RECLAMO_NRO FROM NEW_MODEL.TIPO_RECLAMO WHERE @tipoNombre = TIPO_RECLAMO_NOMBRE
		RETURN @nroTipo
	END
GO

IF OBJECT_ID('obtenerEstadoReclamoNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerEstadoReclamoNro;
GO
CREATE FUNCTION obtenerEstadoReclamoNro(@estadoNombre nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @estadoTipo int;
		SELECT @estadoTipo = ESTADO_RECLAMO_NRO FROM NEW_MODEL.ESTADO_RECLAMO WHERE @estadoNombre = ESTADO_RECLAMO_NOMBRE
		RETURN @estadoTipo
	END
GO

IF OBJECT_ID('obtenerOperadorNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerOperadorNro;
GO
CREATE FUNCTION obtenerOperadorNro(@operadorDni decimal(18,0), @operadorNombre nvarchar(255), @operadorApellido nvarchar(255)) RETURNS int
AS
	BEGIN
		DECLARE @operadorNro int;
		SELECT @operadorNro = OPERADOR_NRO FROM NEW_MODEL.OPERADOR WHERE @operadorDni = OPERADOR_RECLAMO_DNI AND @operadorNombre = OPERADOR_RECLAMO_NOMBRE AND @operadorApellido = OPERADOR_RECLAMO_APELLIDO;
		RETURN @operadorNro;
	END
GO

IF OBJECT_ID('obtenerCuponTipoNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerCuponTipoNro;
GO
CREATE FUNCTION obtenerCuponTipoNro(@tipoNombre nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @cuponTipoNro int;
		SELECT @cuponTipoNro = CUPON_TIPO_NRO FROM NEW_MODEL.CUPON_TIPO WHERE @tipoNombre = CUPON_TIPO
		RETURN @cuponTipoNro;
	END
GO

IF OBJECT_ID('obtenerCuponMotivoNro', 'FN') IS NOT NULL
DROP FUNCTION obtenerCuponMotivoNro;
GO
CREATE FUNCTION obtenerCuponMotivoNro(@motivoNombre nvarchar(50)) RETURNS int
AS
	BEGIN
		DECLARE @cuponMotivoNro int;
		SELECT @cuponMotivoNro = CUPON_MOTIVO_NRO FROM NEW_MODEL.CUPON_MOTIVO WHERE @motivoNombre = CUPON_MOTIVO
		RETURN @cuponMotivoNro
	END
GO

-- CREACION DE PROCEDURESSS
IF OBJECT_ID('MIGRAR_PROVINCIAS', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_PROVINCIAS;
GO
CREATE PROCEDURE MIGRAR_PROVINCIAS
AS
    BEGIN
        INSERT INTO NEW_MODEL.PROVINCIA(PROVINCIA_NOMBRE)
		(SELECT DISTINCT DIRECCION_USUARIO_PROVINCIA AS PROVINCIA_NOMBRE FROM gd_esquema.Maestra WHERE DIRECCION_USUARIO_PROVINCIA IS NOT NULL
		UNION
		SELECT DISTINCT ENVIO_MENSAJERIA_PROVINCIA AS PROVINCIA_NOMBRE FROM gd_esquema.Maestra WHERE ENVIO_MENSAJERIA_PROVINCIA IS NOT NULL
		UNION
		SELECT DISTINCT LOCAL_PROVINCIA AS PROVINCIA_NOMBRE FROM gd_esquema.Maestra  WHERE LOCAL_PROVINCIA IS NOT NULL
		)
        PRINT('PROVINCIAS MIGRADAS')
    END
GO

IF OBJECT_ID('MIGRAR_LOCALIDADES', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_LOCALIDADES;
GO
CREATE PROCEDURE MIGRAR_LOCALIDADES
AS
    BEGIN
        INSERT INTO NEW_MODEL.LOCALIDAD(LOCALIDAD_PRIVINCIA_NRO, LOCALIDAD_NOMBRE)
		SELECT DISTINCT dbo.obtenerProvinciaNro(DIRECCION_USUARIO_PROVINCIA) AS LOCALIDAD_PROVINCIA_NRO, DIRECCION_USUARIO_LOCALIDAD AS LOCALIDAD_NOMBRE FROM gd_esquema.Maestra WHERE DIRECCION_USUARIO_LOCALIDAD IS NOT NULL
		UNION
		SELECT DISTINCT dbo.obtenerProvinciaNro(ENVIO_MENSAJERIA_PROVINCIA) AS LOCALIDAD_PROVINCIA_NRO, ENVIO_MENSAJERIA_LOCALIDAD AS LOCALIDAD_NOMBRE FROM gd_esquema.Maestra WHERE ENVIO_MENSAJERIA_LOCALIDAD IS NOT NULL
		UNION
		SELECT DISTINCT dbo.obtenerProvinciaNro(LOCAL_PROVINCIA), LOCAL_LOCALIDAD AS LOCALIDAD_NOMBRE FROM gd_esquema.Maestra WHERE LOCAL_LOCALIDAD IS NOT NULL;
        PRINT('LOCALIDADES MIGRADAS')
    END
GO

IF OBJECT_ID('MIGRAR_USUARIOS', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_USUARIOS;
GO
CREATE PROCEDURE MIGRAR_USUARIOS
AS
    BEGIN
        INSERT INTO NEW_MODEL.USUARIO(USUARIO_NOMBRE, USUARIO_APELLIDO, USUARIO_DNI, USUARIO_FECHA_REGISTRO, USUARIO_TELEFONO,USUARIO_MAIL, USUARIO_FECHA_NAC)
        SELECT DISTINCT USUARIO_NOMBRE, USUARIO_APELLIDO, USUARIO_DNI, USUARIO_FECHA_REGISTRO, USUARIO_TELEFONO,USUARIO_MAIL, USUARIO_FECHA_NAC
        FROM gd_esquema.Maestra
        PRINT('USUARIOS MIGRADAS')
    END
GO

IF OBJECT_ID('MIGRAR_TIPO_MOVILIDAD', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_TIPO_MOVILIDAD;
GO
CREATE PROCEDURE MIGRAR_TIPO_MOVILIDAD
AS
    BEGIN
        INSERT INTO NEW_MODEL.TIPO_MOVILIDAD(TIPO_MOVILIDAD_NOMBRE)
        SELECT DISTINCT REPARTIDOR_TIPO_MOVILIDAD
        FROM gd_esquema.Maestra
        PRINT('TIPO MOVILIDADES MIGRADAS')
    END
GO


IF OBJECT_ID('MIGRAR_REPARTIDOR', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_REPARTIDOR;
GO
CREATE PROCEDURE MIGRAR_REPARTIDOR
AS
    BEGIN
        INSERT INTO NEW_MODEL.REPARTIDOR(REPARTIDOR_TIPO_MOVILIDAD_NRO ,REPARTIDOR_NOMBRE , REPARTIDOR_APELLIDO ,REPARTIDOR_DNI,REPARTIDOR_TELEFONO, REPARTIDOR_DIRECCION ,REPARTIDOR_EMAIL ,REPARTIDOR_FECHA_NAC)
        SELECT DISTINCT dbo.obtenerTipoMovilidadNro(REPARTIDOR_TIPO_MOVILIDAD) AS REPARTIDOR_TIPO_MOVILIDAD_NRO ,REPARTIDOR_NOMBRE , REPARTIDOR_APELLIDO ,REPARTIDOR_DNI,REPARTIDOR_TELEFONO,REPARTIDOR_DIRECION AS REPARTIDOR_DIRECCION,REPARTIDOR_EMAIL ,REPARTIDOR_FECHA_NAC 
        FROM gd_esquema.Maestra
        PRINT('REPARTIDORES MIGRADAS')
    END
GO

IF OBJECT_ID('MIGRAR_ALTA', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_ALTA;
GO
CREATE PROCEDURE MIGRAR_ALTA
AS
	BEGIN
        INSERT INTO NEW_MODEL.ALTA(ALTA_LOCALIDAD_NRO,ALTA_REPARTIDOR_NRO,ALTA_FECHA)
        SELECT 
            dbo.obtenerLocalidadNro(T.PROVINCIA, T.LOCALIDAD) AS ALTA_LOCALIDAD_NRO,
            dbo.obtenerRepartidorNro(T.REPARTIDOR_DNI) AS ALTA_REPARTIDOR_NRO,
            MAX(T.PEDIDO_FECHA) AS ALTA_FECHA
        FROM (
            SELECT DISTINCT
                LOCAL_PROVINCIA AS PROVINCIA,
                LOCAL_LOCALIDAD AS LOCALIDAD, 
                REPARTIDOR_DNI AS REPARTIDOR_DNI,
                PEDIDO_FECHA AS PEDIDO_FECHA
            FROM gd_esquema.Maestra WHERE PEDIDO_NRO IS NOT NULL
            UNION
            SELECT DISTINCT
                ENVIO_MENSAJERIA_PROVINCIA AS PROVINCIA,
                ENVIO_MENSAJERIA_LOCALIDAD AS LOCALIDAD, 
                REPARTIDOR_DNI AS REPARTIDOR_DNI,
                ENVIO_MENSAJERIA_FECHA AS PEDIDO_FECHA
            FROM gd_esquema.Maestra WHERE ENVIO_MENSAJERIA_NRO IS NOT NULL
        ) T
        GROUP BY
            T.PROVINCIA,
            T.LOCALIDAD, 
            T.REPARTIDOR_DNI

    -- CADA SELECT DEL UNION ME ESTA DANDO LA COMBINACION DE DNI-LOCALIDAD POR DONDE ESTUVO EL REPARTIDOR, EL UNION ES PARA MEZCLAR LOS
    -- PEDIDOS CON LOS ENVIOS_MENSAJERIA, HABRIA QUE VER SI ESTO NO ME PRODUCE DUPLICADOS, ME PARECE QUE NO, PERO CREO QUE ESTA LA POSIBILIDAD
    -- NO SE SI HACIENDO UNS SELECT DISTINCT AL RESULTADO DE LA UNION LO ARREGLAMOS

    -- Ahora vamos a settear como activa su ultima aparicion en una localidad

            UPDATE NEW_MODEL.ALTA
            SET ALTA_ACTIVA = 1
            FROM NEW_MODEL.ALTA ACT
            JOIN (
                SELECT T.ALTA_LOCALIDAD_NRO, T.ALTA_REPARTIDOR_NRO, T.ALTA_FECHA, MAX_FECHA, ROW_NUMBER() OVER (PARTITION BY T.ALTA_REPARTIDOR_NRO, T.ALTA_FECHA, MAX_FECHA ORDER BY T.ALTA_REPARTIDOR_NRO) AS FILA
                FROM NEW_MODEL.ALTA T
                JOIN (
                    SELECT ALTA_REPARTIDOR_NRO, MAX(ALTA_FECHA) AS MAX_FECHA
                    FROM NEW_MODEL.ALTA
                    GROUP BY ALTA_REPARTIDOR_NRO
                ) sub ON T.ALTA_REPARTIDOR_NRO = sub.ALTA_REPARTIDOR_NRO AND T.ALTA_FECHA = sub.MAX_FECHA
            ) finalJoin ON ACT.ALTA_REPARTIDOR_NRO = finalJoin.ALTA_REPARTIDOR_NRO  AND ACT.ALTA_LOCALIDAD_NRO = finalJoin.ALTA_LOCALIDAD_NRO where finalJoin.FILA = 1
        PRINT('ALTA MIGRADAS')
	END
GO

IF OBJECT_ID('MIGRAR_DIRECCION_USUARIO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_DIRECCION_USUARIO;
GO
CREATE PROCEDURE MIGRAR_DIRECCION_USUARIO 
AS
    BEGIN
        INSERT INTO NEW_MODEL.DIRECCION_USUARIO(DIRECCION_USUARIO_USUARIO_NRO,DIRECCION_USUARIO_LOCALIDAD_NRO,DIRECCION_USUARIO_NOMBRE,DIRECCION_USUARIO_DIRECCION)
 	    SELECT DISTINCT dbo.obtenerUsuarioNro(USUARIO_DNI), dbo.obtenerLocalidadNro(DIRECCION_USUARIO_PROVINCIA,DIRECCION_USUARIO_LOCALIDAD), DIRECCION_USUARIO_NOMBRE,DIRECCION_USUARIO_DIRECCION FROM gd_esquema.Maestra
 	    WHERE DIRECCION_USUARIO_DIRECCION IS NOT NULL
        PRINT('DIRECCIONES_USUARIO MIGRADAS')
    END
GO

IF OBJECT_ID('MIGRAR_TIPO_LOCAL', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_TIPO_LOCAL;
GO
CREATE PROCEDURE MIGRAR_TIPO_LOCAL 
AS
    BEGIN
        INSERT INTO NEW_MODEL.TIPO_LOCAL(TIPO_LOCAL_CATEGORIA_NRO, TIPO_LOCAL_NOMBRE)
        SELECT DISTINCT dbo.obtenerCategoriaNro(NULL) AS TIPO_LOCAL_CATEGORIA_NRO, LOCAL_TIPO AS TIPO_LOCAL_NOMBRE FROM gd_esquema.Maestra WHERE LOCAL_TIPO IS NOT NULL
        PRINT('TIPO_LOCAL MIGRADAS')
    END
GO

IF OBJECT_ID('MIGRAR_LOCAL', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_LOCAL;
GO
CREATE PROCEDURE MIGRAR_LOCAL 
AS
    BEGIN
        INSERT INTO NEW_MODEL.LOCAL(LOCAL_TIPO_LOCAL_NRO,LOCAL_LOCALIDAD_NRO,LOCAL_NOMBRE,LOCAL_DESCRIPCION,LOCAL_DIRECCION)
        SELECT DISTINCT dbo.obtenerTipoLocalNro(LOCAL_TIPO),dbo.obtenerLocalidadNro(LOCAL_PROVINCIA,LOCAL_LOCALIDAD), LOCAL_NOMBRE, LOCAL_DESCRIPCION, LOCAL_DIRECCION
        FROM gd_esquema.Maestra
        WHERE LOCAL_NOMBRE IS NOT NULL
        
        PRINT('LOCAL MIGRADAS')
    END
GO

IF OBJECT_ID('MIGRAR_DIA', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_DIA;
GO
CREATE PROCEDURE MIGRAR_DIA 
AS
    BEGIN
        INSERT INTO NEW_MODEL.DIA(DIA_NOMBRE)
        SELECT DISTINCT HORARIO_LOCAL_DIA AS DIA_NOMBRE
        FROM gd_esquema.Maestra
        WHERE HORARIO_LOCAL_DIA IS NOT NULL

        PRINT('DIA MIGRADAS')
    END
GO

IF OBJECT_ID('MIGRAR_HORARIO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_HORARIO;
GO
CREATE PROCEDURE MIGRAR_HORARIO 
AS
    BEGIN
        INSERT INTO NEW_MODEL.HORARIO(HORARIO_LOCAL_NRO,HORARIO_DIA_NRO,HORARIO_LOCAL_HORA_APERTURA,HORARIO_LOCAL_HORA_CIERRE)
        SELECT DISTINCT dbo.obtenerLocalNro(LOCAL_NOMBRE,LOCAL_DIRECCION) AS HORARIO_LOCAL_NRO, dbo.obtenerDiaNro(HORARIO_LOCAL_DIA) AS HORARIO_LOCAL_DIA, HORARIO_LOCAL_HORA_APERTURA,HORARIO_LOCAL_HORA_CIERRE
        FROM gd_esquema.Maestra

        PRINT('HORARIO MIGRADAS')
    END
GO

IF OBJECT_ID('MIGRAR_PRODUCTO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_PRODUCTO;
GO
CREATE PROCEDURE MIGRAR_PRODUCTO 
AS
    BEGIN
        INSERT INTO NEW_MODEL.PRODUCTO(PRODUCTO_CODIGO,PRODUCTO_NOMBRE,PRODUCTO_DESCRIPCION)
        SELECT DISTINCT PRODUCTO_LOCAL_CODIGO, PRODUCTO_LOCAL_NOMBRE, PRODUCTO_LOCAL_DESCRIPCION FROM gd_esquema.Maestra
        WHERE PRODUCTO_LOCAL_CODIGO IS NOT NULL

        PRINT('PRODUCTO MIGRADAS')
    END
GO

IF OBJECT_ID('MIGRAR_PEDIDO_ENVIO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_PEDIDO_ENVIO;
GO
CREATE PROCEDURE MIGRAR_PEDIDO_ENVIO
AS
	BEGIN
		INSERT INTO NEW_MODEL.PEDIDO_ENVIO(PEDIDO_ENVIO_REPARTIDOR_NRO,PEDIDO_ENVIO_DIRECCION_USUARIO_NRO, PEDIDO_ENVIO_OBSERV, PEDIDO_ENVIO_FECHA, PEDIDO_ENVIO_FECHA_ENTREGA)
		SELECT DISTINCT dbo.obtenerRepartidorNro(REPARTIDOR_DNI),dbo.obtenerDireccionUsuarioNro(DIRECCION_USUARIO_NOMBRE,DIRECCION_USUARIO_DIRECCION), PEDIDO_OBSERV, PEDIDO_FECHA, PEDIDO_FECHA_ENTREGA FROM gd_esquema.Maestra
		WHERE PEDIDO_NRO IS NOT NULL

        PRINT('PEDIDO_ENVIO MIGRADAS')
	END
GO

IF OBJECT_ID('MIGRAR_PEDIDO_ESTADO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_PEDIDO_ESTADO;
GO
CREATE PROCEDURE MIGRAR_PEDIDO_ESTADO 
AS
    BEGIN
        
        INSERT INTO NEW_MODEL.PEDIDO_ESTADO(PEDIDO_ESTADO)
        SELECT DISTINCT PEDIDO_ESTADO FROM gd_esquema.Maestra
        WHERE PEDIDO_ESTADO IS NOT NULL
        
        PRINT('PEDIDO_ESTADO MIGRADAS')
    END
GO

IF OBJECT_ID('MIGRAR_MENSAJERIA_ESTADO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_MENSAJERIA_ESTADO;
GO
CREATE PROCEDURE MIGRAR_MENSAJERIA_ESTADO AS
BEGIN
	
	INSERT INTO NEW_MODEL.MENSAJERIA_ESTADO(ENVIO_MENSAJERIA_ESTADO)
	SELECT DISTINCT ENVIO_MENSAJERIA_ESTADO FROM gd_esquema.Maestra
	WHERE ENVIO_MENSAJERIA_ESTADO IS NOT NULL

    PRINT('MIGRAR_MENSAJERIA_ESTADO MIGRADAS')

END
GO

IF OBJECT_ID('MIGRAR_TIPO_PAQUETE', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_TIPO_PAQUETE;
GO

CREATE PROCEDURE MIGRAR_TIPO_PAQUETE AS
BEGIN
	
	INSERT INTO NEW_MODEL.TIPO_PAQUETE(TIPO_PAQUETE_NOMBRE,PAQUETE_ALTO_MAX,PAQUETE_ANCHO_MAX,PAQUETE_LARGO_MAX,PAQUETE_PESO_MAX)
	SELECT DISTINCT PAQUETE_TIPO,PAQUETE_ALTO_MAX,PAQUETE_ANCHO_MAX,PAQUETE_LARGO_MAX,PAQUETE_PESO_MAX FROM gd_esquema.Maestra
	WHERE PAQUETE_TIPO IS NOT NULL

    PRINT('PAQUETE_TIPO MIGRADAS')

END
GO

IF OBJECT_ID('MIGRAR_PAQUETE', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_PAQUETE;
GO

CREATE PROCEDURE MIGRAR_PAQUETE AS
BEGIN
	
	INSERT INTO NEW_MODEL.PAQUETE(PAQUETE_TIPO_PAQUETE_NRO,TIPO_PAQUETE_PRECIO)
	SELECT DISTINCT dbo.obtenertipoPaqueteNro(PAQUETE_TIPO),PAQUETE_TIPO_PRECIO FROM gd_esquema.Maestra
	WHERE PAQUETE_TIPO_PRECIO IS NOT NULL

    PRINT('PAQUETE MIGRADAS')

END
GO

IF OBJECT_ID('MIGRAR_ENVIO_MENSAJERIA', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_ENVIO_MENSAJERIA;
GO
CREATE PROCEDURE MIGRAR_ENVIO_MENSAJERIA AS
BEGIN
	
	INSERT INTO NEW_MODEL.ENVIO_MENSAJERIA(ENVIO_MENSAJERIA_LOCALIDAD_NRO, ENVIO_MENSAJERIA_REPARTIDOR_NRO, ENVIO_MENSAJERIA_DIR_ORIG, ENVIO_MENSAJERIA_DIR_DEST, ENVIO_MENSAJERIA_KM, ENVIO_MENSAJERIA_OBSERV, ENVIO_MENSAJERIA_FECHA, ENVIO_MENSAJERIA_FECHA_ENTREGA)
	SELECT DISTINCT dbo.obtenerLocalidadNro(ENVIO_MENSAJERIA_PROVINCIA,ENVIO_MENSAJERIA_LOCALIDAD), dbo.obtenerRepartidorNro(REPARTIDOR_DNI), ENVIO_MENSAJERIA_DIR_ORIG, ENVIO_MENSAJERIA_DIR_DEST, ENVIO_MENSAJERIA_KM, ENVIO_MENSAJERIA_OBSERV, ENVIO_MENSAJERIA_FECHA, ENVIO_MENSAJERIA_FECHA_ENTREGA FROM gd_esquema.Maestra
	WHERE ENVIO_MENSAJERIA_NRO IS NOT NULL

    PRINT('ENVIO_MENSAJERIA MIGRADAS')

END
GO

IF OBJECT_ID('MIGRAR_MEDIO_PAGO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_MEDIO_PAGO;
GO
CREATE PROCEDURE MIGRAR_MEDIO_PAGO AS
BEGIN
	INSERT INTO NEW_MODEL.MEDIO_PAGO(MEDIO_PAGO)
	SELECT DISTINCT MEDIO_PAGO_TIPO FROM gd_esquema.Maestra
	WHERE MEDIO_PAGO_TIPO IS NOT NULL

    PRINT('MEDIO_PAGO MIGRADAS')
END
GO

IF OBJECT_ID('MIGRAR_MARCA_TARJETA', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_MARCA_TARJETA;
GO
CREATE PROCEDURE MIGRAR_MARCA_TARJETA AS
BEGIN
	INSERT INTO NEW_MODEL.MARCA_TARJETA(MARCA_TARJETA)
	SELECT DISTINCT MARCA_TARJETA FROM gd_esquema.Maestra
	WHERE MARCA_TARJETA IS NOT NULL

    PRINT('MARCA_TARJETA MIGRADAS')
END
GO

IF OBJECT_ID('MIGRAR_TARJETA', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_TARJETA;
GO
CREATE PROCEDURE MIGRAR_TARJETA AS
BEGIN
	INSERT INTO NEW_MODEL.TARJETA(TARJETA_USUARIO_NRO, TARJETA_MARCA_NRO,TARJETA)
    SELECT DISTINCT dbo.obtenerUsuarioNro(USUARIO_DNI),dbo.obtenerMarcaTarjetaNro(MARCA_TARJETA), MEDIO_PAGO_NRO_TARJETA FROM gd_esquema.Maestra

    PRINT('TARJETA MIGRADAS')
END
GO

IF OBJECT_ID('MIGRAR_PEDIDO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_PEDIDO;
GO
CREATE PROCEDURE MIGRAR_PEDIDO 
AS
    BEGIN
        INSERT INTO NEW_MODEL.PEDIDO(PEDIDO_NRO, PEDIDO_ENVIO_NRO, PEDIDO_ESTADO_NRO, PEDIDO_USUARIO_NRO, PEDIDO_TOTAL_CUPONES, PEDIDO_TOTAL_SERVICIO, PEDIDO_PROPINA, PEDIDO_PRECIO_ENVIO, PEDIDO_TARIFA_SERVICIO, PEDIDO_TOTAL_PRODUCTOS, PEDIDO_CALIFICACION, PEDIDO_TIEMPO_ESTIMADO,PEDIDO_TOTAL)
        SELECT DISTINCT PEDIDO_NRO, 
                        dbo.obtenerPedidoEnvioNro(dbo.obtenerRepartidorNro(REPARTIDOR_DNI), PEDIDO_FECHA, dbo.obtenerDireccionUsuarioNro(DIRECCION_USUARIO_NOMBRE,DIRECCION_USUARIO_DIRECCION)), 
                        dbo.obtenerPedidoEstadoNro(PEDIDO_ESTADO), 
                        dbo.obtenerUsuarioNro(USUARIO_DNI), 
                        PEDIDO_TOTAL_CUPONES, 
                        PEDIDO_TOTAL_SERVICIO, 
                        PEDIDO_PROPINA, 
                        PEDIDO_PRECIO_ENVIO,
                        PEDIDO_TARIFA_SERVICIO, 
                        PEDIDO_TOTAL_PRODUCTOS,
                        PEDIDO_CALIFICACION, 
                        PEDIDO_TIEMPO_ESTIMADO_ENTREGA,
                        PEDIDO_TOTAL_SERVICIO + PEDIDO_TOTAL_PRODUCTOS + PEDIDO_PRECIO_ENVIO + PEDIDO_PROPINA - PEDIDO_TOTAL_CUPONES
        FROM gd_esquema.Maestra
        WHERE PEDIDO_NRO IS NOT NULL

        PRINT('PEDIDO MIGRADAS')

    END
GO

IF OBJECT_ID('MIGRAR_PAGO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_PAGO;
GO
CREATE PROCEDURE MIGRAR_PAGO AS
BEGIN
	INSERT INTO NEW_MODEL.PAGO(PAGO_PEDIDO_NRO, PAGO_MENSAJERIA_NRO, PAGO_MEDIO_PAGO_NRO, PAGO_TARJETA_NRO)
    SELECT DISTINCT
        PEDIDO_NRO AS PEDIDO_NRO,
        NULL AS MENSAJERIA_NRO,
        dbo.obtenerMedioPagoNro(MEDIO_PAGO_TIPO),
        dbo.obtenerTarjetaNro(dbo.obtenerMarcaTarjetaNro(MARCA_TARJETA),MEDIO_PAGO_NRO_TARJETA)
    FROM gd_esquema.Maestra
    WHERE PEDIDO_NRO IS NOT NULL
    UNION
    SELECT DISTINCT
            NULL AS PEDIDO_NRO,
            ENVIO_MENSAJERIA_NRO AS MENSAJERIA_NRO, 
            dbo.obtenerMedioPagoNro(MEDIO_PAGO_TIPO),
            dbo.obtenerTarjetaNro(dbo.obtenerMarcaTarjetaNro(MARCA_TARJETA),MEDIO_PAGO_NRO_TARJETA)
    FROM gd_esquema.Maestra
    WHERE ENVIO_MENSAJERIA_NRO IS NOT NULL

    PRINT('PAGO MIGRADAS')
END
GO

IF OBJECT_ID('MIGRAR_MENSAJERIA', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_MENSAJERIA;
GO
CREATE PROCEDURE MIGRAR_MENSAJERIA AS
BEGIN
	
	INSERT INTO NEW_MODEL.MENSAJERIA(MENSAJERIA_NRO,MENSAJERIA_USUARIO_NRO,MENSAJERIA_ENVIO_NRO,MENSAJERIA_PAQUETE_NRO,MENSAJERIA_ESTADO,MENSAJERIA_PRECIO_SEGURO,MENSAJERIA_PRECIO_ENVIO ,MENSAJERIA_PROPINA ,MENSAJERIA_TOTAL ,MENSAJERIA_VALOR_ASEGURADO,MENSAJERIA_CALIFICACION,MENSAJERIA_TIEMPO_ESTIMADO)
	SELECT DISTINCT ENVIO_MENSAJERIA_NRO, dbo.obtenerUsuarioNro(USUARIO_DNI), dbo.obtenerEnvioMensajeriaNro(dbo.obtenerRepartidorNro(REPARTIDOR_DNI), ENVIO_MENSAJERIA_FECHA, ENVIO_MENSAJERIA_DIR_DEST),dbo.obtenertipoPaqueteNro(PAQUETE_TIPO),dbo.obtenerEstadoNro(ENVIO_MENSAJERIA_ESTADO),ENVIO_MENSAJERIA_PRECIO_SEGURO,ENVIO_MENSAJERIA_PRECIO_ENVIO,ENVIO_MENSAJERIA_PROPINA ,ENVIO_MENSAJERIA_TOTAL ,ENVIO_MENSAJERIA_VALOR_ASEGURADO ,ENVIO_MENSAJERIA_CALIFICACION,ENVIO_MENSAJERIA_TIEMPO_ESTIMADO FROM gd_esquema.Maestra
	WHERE ENVIO_MENSAJERIA_NRO IS NOT NULL

    PRINT('MENSAJERIA MIGRADAS')

END
GO




IF OBJECT_ID('MIGRAR_TIPO_RECLAMO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_TIPO_RECLAMO;
GO

CREATE PROCEDURE MIGRAR_TIPO_RECLAMO AS
BEGIN
	INSERT INTO NEW_MODEL.TIPO_RECLAMO(TIPO_RECLAMO_NOMBRE)
	SELECT DISTINCT RECLAMO_TIPO FROM gd_esquema.Maestra
	WHERE RECLAMO_TIPO IS NOT NULL

    PRINT('TIPO_RECLAMO MIGRADAS')
END
GO

IF OBJECT_ID('MIGRAR_ESTADO_RECLAMO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_ESTADO_RECLAMO;
GO

CREATE PROCEDURE MIGRAR_ESTADO_RECLAMO AS
BEGIN

	INSERT INTO NEW_MODEL.ESTADO_RECLAMO(ESTADO_RECLAMO_NOMBRE)
	SELECT DISTINCT RECLAMO_ESTADO FROM gd_esquema.Maestra
	WHERE RECLAMO_ESTADO IS NOT NULL

    PRINT('ESTADO_RECLAMO MIGRADAS')
END
GO

IF OBJECT_ID('MIGRAR_OPERADOR', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_OPERADOR;
GO
CREATE PROCEDURE MIGRAR_OPERADOR AS
BEGIN
	INSERT INTO NEW_MODEL.OPERADOR(OPERADOR_RECLAMO_NOMBRE ,OPERADOR_RECLAMO_APELLIDO ,OPERADOR_RECLAMO_DNI ,OPERADOR_RECLAMO_TELEFONO ,OPERADOR_RECLAMO_DIRECCION ,OPERADOR_RECLAMO_MAIL ,OPERADOR_RECLAMO_FECHA_NAC)
	SELECT DISTINCT OPERADOR_RECLAMO_NOMBRE ,OPERADOR_RECLAMO_APELLIDO ,OPERADOR_RECLAMO_DNI ,OPERADOR_RECLAMO_TELEFONO ,OPERADOR_RECLAMO_DIRECCION ,OPERADOR_RECLAMO_MAIL ,OPERADOR_RECLAMO_FECHA_NAC FROM gd_esquema.Maestra
	WHERE OPERADOR_RECLAMO_DNI IS NOT NULL

    PRINT('OPERADOR MIGRADAS')
END
GO

IF OBJECT_ID('MIGRAR_CUPON_TIPO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_CUPON_TIPO;
GO
CREATE PROCEDURE MIGRAR_CUPON_TIPO AS
BEGIN
    INSERT INTO NEW_MODEL.CUPON_TIPO (CUPON_TIPO)
    VALUES ('Estandar'), ('Reclamo');

    PRINT('CUPON_TIPO MIGRADAS')
END
GO

IF OBJECT_ID('MIGRAR_CUPON_MOTIVO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_CUPON_MOTIVO;
GO
CREATE PROCEDURE MIGRAR_CUPON_MOTIVO AS
BEGIN
	INSERT INTO NEW_MODEL.CUPON_MOTIVO(CUPON_MOTIVO)
	SELECT DISTINCT CUPON_TIPO FROM gd_esquema.Maestra WHERE CUPON_TIPO IS NOT NULL
    UNION
    SELECT DISTINCT CUPON_RECLAMO_TIPO FROM gd_esquema.Maestra WHERE CUPON_RECLAMO_TIPO IS NOT NULL

    PRINT('CUPON_MOTIVO MIGRADAS')
END
GO

IF OBJECT_ID('MIGRAR_CUPON', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_CUPON;
GO
CREATE PROCEDURE MIGRAR_CUPON AS
BEGIN
	INSERT INTO NEW_MODEL.CUPON(CUPON_NRO, CUPON_TIPO_NRO, CUPON_USUARIO_NRO, CUPON_MOTIVO_NRO, CUPON_MONTO, CUPON_FECHA_ALTA, CUPON_FECHA_VENCIMIENTO)
    SELECT DISTINCT CUPON_NRO AS NUMERO,
                    dbo.obtenerCuponTipoNro('Estandar'),
                    dbo.obtenerUsuarioNro(USUARIO_DNI),
                    dbo.obtenerCuponMotivoNro(CUPON_TIPO) AS TIPO,
                    CUPON_MONTO AS MONTO,
                    CUPON_FECHA_ALTA AS ALTA,
                    CUPON_FECHA_VENCIMIENTO AS VENCIMIENTO
                    FROM gd_esquema.Maestra
    WHERE CUPON_NRO IS NOT NULL
	UNION
    SELECT DISTINCT CUPON_RECLAMO_NRO AS NUMERO,
                    dbo.obtenerCuponTipoNro('Reclamo'),
                    dbo.obtenerUsuarioNro(USUARIO_DNI),
                    dbo.obtenerCuponMotivoNro(CUPON_RECLAMO_TIPO) AS TIPO,
                    CUPON_RECLAMO_MONTO AS MONTO,
                    CUPON_RECLAMO_FECHA_ALTA AS ALTA,
                    CUPON_RECLAMO_FECHA_VENCIMIENTO AS VENCIMIENTO
                    FROM gd_esquema.Maestra
    WHERE CUPON_RECLAMO_NRO IS NOT NULL

    PRINT('CUPON MIGRADAS')
END
GO


IF OBJECT_ID('MIGRAR_RECLAMO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_RECLAMO;
GO
CREATE PROCEDURE MIGRAR_RECLAMO AS
BEGIN
	INSERT INTO NEW_MODEL.RECLAMO(RECLAMO_NRO, RECLAMO_USUARIO_NRO, RECLAMO_PEDIDO_NRO, RECLAMO_TIPO_RECLAMO_NRO, RECLAMO_ESTADO_RECLAMO_NRO, RECLAMO_OPERADOR_NRO, RECLAMO_FECHA, RECLAMO_DESCRIPCION, RECLAMO_FECHA_SOLUCION, RECLAMO_SOLUCION, RECLAMO_CALIFICACION)
    SELECT DISTINCT RECLAMO_NRO,
                    dbo.obtenerUsuarioNro(USUARIO_DNI),
                    PEDIDO_NRO,
                    dbo.obtenerTipoReclamo(RECLAMO_TIPO),
                    dbo.obtenerEstadoReclamoNro(RECLAMO_ESTADO),
                    dbo.obtenerOperadorNro(OPERADOR_RECLAMO_DNI, OPERADOR_RECLAMO_NOMBRE, OPERADOR_RECLAMO_APELLIDO),
                    RECLAMO_FECHA,
                    RECLAMO_DESCRIPCION,
                    RECLAMO_FECHA_SOLUCION,
                    RECLAMO_SOLUCION,
                    RECLAMO_CALIFICACION  
                    FROM gd_esquema.Maestra
    WHERE RECLAMO_NRO IS NOT NULL

    PRINT('RECLAMO MIGRADAS')
END
GO

IF OBJECT_ID('MIGRAR_CUPON_GENERADO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_CUPON_GENERADO;
GO
CREATE PROCEDURE MIGRAR_CUPON_GENERADO AS
BEGIN
	INSERT INTO NEW_MODEL.CUPON_GENERADO(CUPON_GENERADO_RECLAMO_NRO, CUPON_GENERADO_CUPON_NRO, CUPON_GENERADO_CUPON_TIPO)
    SELECT DISTINCT RECLAMO_NRO,
                    CUPON_RECLAMO_NRO,
                    dbo.obtenerCuponTipoNro('Reclamo')
                    FROM gd_esquema.Maestra
    WHERE CUPON_RECLAMO_NRO IS NOT NULL

    PRINT('CUPON_GENERADO MIGRADAS')
END
GO

IF OBJECT_ID('MIGRAR_LOCAL_PRODUCTO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_LOCAL_PRODUCTO;
GO
CREATE PROCEDURE MIGRAR_LOCAL_PRODUCTO
AS
	BEGIN
		INSERT INTO NEW_MODEL.LOCAL_PRODUCTO(LOCAL_PRODUCTO_LOCAL_NRO, LOCAL_PRODUCTO_PRODUCTO_NRO, LOCAL_PRODUCTO_PRECIO_UNITARIO)
        SELECT LOCAL_PRODUCTO_LOCAL_NRO , LOCAL_PRODUCTO_PRODUCTO_NRO , PRODUCTO_LOCAL_PRECIO
        FROM (
        SELECT dbo.obtenerLocalNro(LOCAL_NOMBRE, LOCAL_DIRECCION) AS LOCAL_PRODUCTO_LOCAL_NRO, dbo.obtenerProductoNro(PRODUCTO_LOCAL_CODIGO) AS LOCAL_PRODUCTO_PRODUCTO_NRO, PRODUCTO_LOCAL_PRECIO, ROW_NUMBER() OVER (PARTITION BY LOCAL_NOMBRE, LOCAL_DIRECCION, PRODUCTO_LOCAL_CODIGO ORDER BY PEDIDO_FECHA) AS numeroFila
        FROM gd_esquema.Maestra WHERE PRODUCTO_LOCAL_CODIGO IS NOT NULL
        ) t
        WHERE numeroFila = 1;

        PRINT('LOCAL_PRODUCTO MIGRADAS')

	END
GO

IF OBJECT_ID('MIGRAR_ITEM', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_ITEM;
GO
CREATE PROCEDURE MIGRAR_ITEM
AS
	BEGIN
		INSERT INTO NEW_MODEL.ITEM(ITEM_LOCAL_PRODUCTO_LOCAL_NRO, ITEM_LOCAL_PRODUCTO_PRODUCTO_NRO, ITEM_PEDIDO_NRO, ITEM_CANTIDAD, ITEM_PRECIO,ITEM_TOTAL)
        SELECT DISTINCT 
            dbo.obtenerLocalNro(LOCAL_NOMBRE, LOCAL_DIRECCION), 
            dbo.obtenerProductoNro(PRODUCTO_LOCAL_CODIGO),
            PEDIDO_NRO,
            SUM(PRODUCTO_CANTIDAD) AS PRODUCTO_CANTIDAD,
            PRODUCTO_LOCAL_PRECIO,
            SUM(PRODUCTO_CANTIDAD) * PRODUCTO_LOCAL_PRECIO
        FROM gd_esquema.Maestra WHERE PEDIDO_NRO IS NOT NULL AND PRODUCTO_LOCAL_CODIGO IS NOT NULL
        GROUP BY 
            LOCAL_NOMBRE,
            LOCAL_DIRECCION,
            PRODUCTO_LOCAL_CODIGO,
            PRODUCTO_LOCAL_PRECIO,
            PEDIDO_NRO
        ORDER BY PEDIDO_NRO

        PRINT('ITEM MIGRADAS')
	END
GO

IF OBJECT_ID('MIGRAR_CUPON_APLICADO', 'P') IS NOT NULL
    DROP PROCEDURE MIGRAR_CUPON_APLICADO;
GO
CREATE PROCEDURE MIGRAR_CUPON_APLICADO
AS
	BEGIN
		INSERT INTO NEW_MODEL.CUPON_APLICADO(CUPON_APLICADO_PEDIDO_NRO, CUPON_APLICADO_CUPON_NRO, CUPON_APLICADO_CUPON_TIPO_NRO, CUPON_APLICADO_FECHA)
        SELECT DISTINCT PEDIDO_NRO, 
                        CUPON_NRO,
                        dbo.obtenerCuponTipoNro('Estandar'),
                        PEDIDO_FECHA
        FROM gd_esquema.Maestra WHERE PEDIDO_NRO IS NOT NULL AND CUPON_NRO IS NOT NULL 
		UNION
		SELECT DISTINCT PEDIDO_NRO, 
                        CUPON_RECLAMO_NRO,
                        dbo.obtenerCuponTipoNro('Reclamo'),
                        PEDIDO_FECHA
        FROM gd_esquema.Maestra WHERE PEDIDO_NRO IS NOT NULL AND CUPON_RECLAMO_NRO IS NOT NULL 

        PRINT('CUPON_APLICADO MIGRADAS')
	END
GO

BEGIN TRANSACTION
BEGIN TRY
EXEC MIGRAR_PROVINCIAS;
EXEC MIGRAR_LOCALIDADES;
EXEC MIGRAR_USUARIOS;
EXEC MIGRAR_TIPO_MOVILIDAD;
EXEC MIGRAR_REPARTIDOR;
EXEC MIGRAR_ALTA;
EXEC MIGRAR_DIRECCION_USUARIO;
EXEC MIGRAR_TIPO_LOCAL;
EXEC MIGRAR_LOCAL;
EXEC MIGRAR_DIA;
EXEC MIGRAR_HORARIO;
EXEC MIGRAR_PRODUCTO;
EXEC MIGRAR_PEDIDO_ENVIO;
EXEC MIGRAR_PEDIDO_ESTADO;
EXEC MIGRAR_PEDIDO;
EXEC MIGRAR_LOCAL_PRODUCTO;
EXEC MIGRAR_ITEM;
EXEC MIGRAR_MENSAJERIA_ESTADO;
EXEC MIGRAR_TIPO_PAQUETE;
EXEC MIGRAR_PAQUETE;
EXEC MIGRAR_ENVIO_MENSAJERIA;
EXEC MIGRAR_MENSAJERIA;
EXEC MIGRAR_MARCA_TARJETA;
EXEC MIGRAR_TARJETA;
EXEC MIGRAR_MEDIO_PAGO;
EXEC MIGRAR_PAGO;
EXEC MIGRAR_TIPO_RECLAMO;
EXEC MIGRAR_ESTADO_RECLAMO;
EXEC MIGRAR_OPERADOR;
EXEC MIGRAR_CUPON_TIPO;
EXEC MIGRAR_CUPON_MOTIVO;
EXEC MIGRAR_CUPON;
EXEC MIGRAR_CUPON_APLICADO;
EXEC MIGRAR_RECLAMO;

PRINT '--- Tablas migradas correctamente --';
COMMIT TRANSACTION
END TRY
BEGIN CATCH
ROLLBACK TRANSACTION;
THROW 50001, 'No se migraron las tablas',1;
END CATCH

